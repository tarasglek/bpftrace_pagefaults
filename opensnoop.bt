#!/usr/bin/env bpftrace
/*
 * opensnoop	Trace open() syscalls.
 *		For Linux, uses bpftrace and eBPF.
 *
 * Also a basic example of bpftrace.
 *
 * USAGE: opensnoop.bt
 *
 * This is a bpftrace version of the bcc tool of the same name.
 *
 * Copyright 2018 Netflix, Inc.
 * Licensed under the Apache License, Version 2.0 (the "License")
 *
 * 08-Sep-2018	Brendan Gregg	Created this.
 */

BEGIN
{
	printf("Tracing open syscalls... Hit Ctrl-C to end.\n");
}

tracepoint:syscalls:sys_enter_open,
tracepoint:syscalls:sys_enter_openat
{
	@filename[tid] = args->filename;
}

tracepoint:syscalls:sys_exit_open,
tracepoint:syscalls:sys_exit_openat
/@filename[tid]/
{
	$ret = args->ret;
	$fd = $ret > 0 ? $ret : -1;
	$errno = $ret > 0 ? 0 : - $ret;
    $fname = @filename[tid];
	printf("%s open(%s)=%d\n", comm, str($fname), $ret);
	delete(@filename[tid]);
	@fd_map[tid, $fd] = $fname;
}

tracepoint:syscalls:sys_enter_mmap
{

	$errno = 0;
  /* void *mmap(void *addr, size_t length, int prot, int flags,
                  int fd, off_t offset);
				  */
	@mmap_off[tid] = args->off;
	@mmap_len[tid] = args->len;
	@mmap_fd[tid] = args->fd;
	@mmap_fname[tid] = @fd_map[tid, args->fd];
}

tracepoint:syscalls:sys_exit_mmap
{
    $fname = @mmap_fname[tid];
	$mmap_start = args->ret;
	$mmap_len = @mmap_len[tid];
	$mmap_end = $mmap_start + $mmap_len;
	printf("%s, mmap(fd=%d, fname=%s, fname=%X,off=%d, len=%d)=0x%X-0x%X\n",
			comm, @mmap_fd[tid], str($fname), $fname, @mmap_off[tid], $mmap_len, $mmap_start, $mmap_end);
}

tracepoint:exceptions:page_fault_user
{
	printf("%s page_fault_user(address=0x%X, ip=0x%X)\n", comm, args->address, args->ip);
}

END
{
	clear(@filename);
	clear(@fd_map);
	clear(@mmap_fname);
	clear(@mmap_off);
	clear(@mmap_len);
	clear(@mmap_fd);
}
